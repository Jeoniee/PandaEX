<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.panda.mapper.MemberMapper">
	
	<insert id="insertRep">
		insert into report (goods_no,auction_no,u_id,rep_subject,rep_reason,rep_sort,rep_u_id) 
		values (#{goods_no},#{auction_no},#{u_id},#{rep_subject},#{rep_reason},#{rep_sort},#{rep_u_id})
	</insert>
	
	<insert id="insert" >
       insert into user(user_id,user_pw,user_nick,user_email,user_tel,user_name,user_addr,user_temp,user_area)
       values (#{user_id},#{user_pw},#{user_nick},#{user_email},#{user_tel},#{user_name},#{user_addr},#{user_temp},#{user_area})
    </insert>

 	<select id="getMember" resultType="MemberVO">
 	  select * from user
 	  where user_id = #{user_id} 
 	</select>
	
	<select id="getNick" resultType="MemberVO">
 	  select * from user
 	  where user_nick = #{user_nick} 
 	</select>
 	 	<select id="getMembera" resultType="MemberVO">
 	  select * from user 
 	  where user_id=#{user_id} and user_pw = #{user_pw} 	
 	</select>
 	
 	
	<select id="login" resultType="MemberVO">
		select * from user
		where user_id=#{user_id} and user_pw=#{user_pw}	
	</select>
	

 	
	<select id="findKakao" resultType="HashMap">
		select * from kakao_user where k_name=#{nickname} and k_email=#{email}
	</select>

	<insert id="kakaoInsert">
		insert into kakao_user(k_name, k_email)
			values(#{nickname}, #{email})
	</insert>
	
	
	<!-- 아이디 찾기 -->
	<select id="findId" resultType="MemberVO">
		select user_id
		from user
		where user_name=#{user_name} and user_tel=#{user_tel}
	</select>
	
	<!--  회원 임시 비밀번호-->
<!-- 	<update id="searchPassword" parameterType="Map"> -->
<!-- 		update user set user_pw = #{param3} where user_id = #{param1} and user_email = #{param2} -->
<!-- 	</update> -->
	
	
<!-- 	<select id="pwCheck" resultType="int"> -->
<!-- 		select count(*) -->
<!-- 		from user -->
<!-- 		where user_id=#{user_id} and user_pw=#{user_pw} -->
<!-- 	</select> -->


	<update id="updateMailKey" parameterType="MemberVO">
    update user set mail_key=#{mail_key} where user_email=#{user_email} and user_id=#{user_id}
	</update>
	
	<update id="updateMailAuth" parameterType="MemberVO">
    update user set mail_auth=1 where user_email=#{user_email} and mail_key=#{mail_key}
	</update>
	
	<select id="emailAuthFail" parameterType="String" resultType="int">
    select count(*) from user where user_id=#{user_id} and mail_auth=1
	</select>
	
	
	<!-- 비밀번호 변경 & 재발급 링크에서 변경  -->
	<select id="pwCheck" resultType="String">
	select user_pw from user where user_no = #{user_no}
	</select>

<!-- 비밀번호 변경 -->
	<update id="updatePw" >
		update user set user_pw = #{user_pw} where user_id = #{user_id}
	</update>
	
	<update id="pwUpdate" >
		update user set user_pw = #{user_pw} where user_no = #{user_no}
	</update>
	
	
	<!-- 닉네임,패스워드변경 -->
	
<!-- 	  <update id="updatemyp"> -->
<!--     update user set user_nick=#{user_nick}, user_pw=#{user_pw}  -->
<!--     where user_id = #{user_id}   -->
<!--   	</update> -->
	
	
	
	
	
	
	<!-- 관리자용 회원조회 -->
	<select id="getMembers" resultType="MemberVO">
		select * from user where user_no=#{user_no}
	</select>
		
 	<select id="getMemberList" resultType="MemberVO">
 	 select * from user
 	 where user_id != #{user_id} 	
 	</select>
 	
 	<update id="changeblack" >
 		update user set 
 		<if test="user_black == 0">
 		user_black = 1 
 		</if>
 		<if test="user_black == 1">
 		user_black = 0 
 		</if>
 		where user_no=#{user_no}
 	</update>
	<!-- 관리자용 회원조회 -->
	
	
	
	
	<!-- 정보 수정 -->
	<update id="modify">
		update user
		set user_nick=#{user_nick}, user_pw=#{user_pw},user_name=#{user_name},user_tel=#{user_tel} 
		where user_id=#{user_id}
	</update>
	
	<!-- 비밀번호 체크 -->
	<select id="passCheck" resultType="Integer">
		select count(*) FROM user
		where user_id = #{user_id}
		  and user_pw = #{user_pw}
	</select>
	
	<!-- 회원 탈퇴 -->
	<delete id="exit">
		delete from user
		where user_id=#{user_id}
	</delete>
	
	
</mapper>