<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.panda.mapper.GoodsMapper">

	
	<!-- 상품 등록(user_nick 빠짐) -->
	<insert id="createGoods">
		insert into goods(goods_category,goods_title,goods_condition,goods_price,goods_discount,goods_detail,goods_refund,
						  goods_trade,uploadFile,thumbnail)
		values(#{goods_category},#{goods_title},#{goods_condition},#{goods_price},#{goods_discount},#{goods_detail},#{goods_refund},
			   #{goods_trade},#{uploadFile},#{thumbnail})
	</insert> 
	
	<!-- 상품 목록(all) -->
	<select resultType="GoodsVO" id="listAll">
		select * from goods 
		<if test="k!=null and k!=''">
			where goods_title like concat('%',#{k},'%')
			<if test="l!=null and l!=''">
			and user_addr=#{l}
			</if>
		</if>
		<if test="k=='' and l!=null">
			where user_addr=#{l}
		</if>
		<if test="s==0">
			order by goods_date desc
		</if>
		<if test="s==1">
			order by goods_price desc
		</if>
		<if test="s==2">
			order by goods_price asc
		</if>
		<if test="s==3">
			order by viewcount desc
		</if>
		
	</select>
		
	<!-- 글 조회수 1증가 -->
 	<update id="updateViewcnt">
 		update goods set viewcount = viewcount+1 
 		where goods_no=#{goods_no} 
 	</update>
 	
 	<!-- 글번호(goods_no) 글정보 모두 조회 -->
 	<select id="getGoods" resultType="com.panda.domain.GoodsVO">
 		select * from goods where goods_no = #{goods_no}
 	</select>
 	
 	<!-- 사용자 정보 조회 -->
	<select id="getUser" resultType="goodsVO">
      select A.*, B.* 
        from goods A join user B 
          on A.user_no = B.user_no
       where A.user_no = #{user_no}
   	</select>
   	
   	<!-- 상품번호, 회원번호 사용한 글정보 조회 -->
   	<select id="getGoods2" resultType="Map">
   		select A.*, B.*
   		  from goods A join user B
   		    on A.user_no = B.user_no
   		 where A.goods_no = #{goods_no}
   		   and B.user_no = #{user_no}
   	</select>
 	
 	<!-- 글정보 수정 -->
 	<update id="updateGoods">
 		update goods set goods_category=#{goods_category},goods_title=#{goods_title},goods_condition=#{goods_condition},goods_price=#{goods_price},
 						 goods_discount=#{goods_discount},goods_detail=#{goods_detail},goods_refund=#{goods_refund},goods_trade=#{goods_trade}
 		where goods_no=#{goods_no}
 	</update>
 	
 	<!-- 글정보 삭제 -->
 	<delete id="removeGoods">
 		delete from goods where goods_no = #{goods_no }
 	</delete>
	

	<!-- 게시판 글전체 개수 -->
   <select id="totalcount" resultType="int">
        select count(goods_no) from goods_no  
   </select>
   
   <!-- 경매 상품 찜 업데이트 -->
	<update id="updateLike">
	 update goods
 	 set goods_like = CASE WHEN #{goods_like}='0' THEN (select goods_like
	                                                    from (select goods_like+1 goods_like 
	    													  from goods 
	    												      where goods_no = #{goods_no}) g)
			         	 ELSE (select g.goods_like from (select goods_like-1 as goods_like 
			            									   from goods 
			            								      where goods_no = #{goods_no}) g)
	 		                    END
	where goods_no = #{goods_no}
	</update>	
	

</mapper>